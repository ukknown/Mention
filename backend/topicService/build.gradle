plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.ssafy'
version = '1.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.7")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.apache.commons:commons-text:1.9'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.json:json:20211205'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-bus-amqp
	implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'

	// model mapper
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '3.1.1'

	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// cloud bootstrap
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'


}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
